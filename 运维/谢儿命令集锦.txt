1
	2018年02月23日。
	参考书Linux Shell Scripting Cookbook,Packet出版社，作者Sarath Lakshman。
2
2.1 echo
	问题：一个变量叫a,值是2，怎样输出 $a ,不输出2
	解：$ echo '$a'

	问题：怎样不换行
	解：加 -n
	
	使用\t,\n之类的转义字符
	$ echo -e '1\t\n'

	彩色
	解：
	字的色
	$ echo -e '\e[1;31m light red\e[0m'
	$ echo -e '\e[1;32m light green\e[0m'
	$ echo -e '\e[1;33m light yellow\e[0m'
	$ echo -e '\e[1;34m light purple\e[0m'
	$ echo -e '\e[1;35m light pink\e[0m'
	$ echo -e '\e[1;36m light blue\e[0m'
	$ echo -e '\e[1;37m light white\e[0m'

	背景色
	31是设置字成红色，41是设置背景成红色，其它同理
	$ echo -e '\e[1;41m red\e[0m'
	
	暗红色，把1,31m改成0,31m，其它同理
	$ echo -e '\e[0;31m red\e[0m'
	更暗的红色
	$ echo -e '\e[2;31m red\e[0m'
	斜体
	$ echo -e '\e[3;31m red\e[0m'
	下划线
	$ echo -e '\e[4;31m red\e[0m'
	
2.2 printf
	$ printf "%d %d\n" 1 2
	%d的用法和C语言一样，后面1和2用空格隔开。
7 查看终端信息
	终端有多少列
	$ tput cols
	终端有多少行
	$ tput lines
	终端的名字
	$ tput longname
	光标移动到最上面一行，第40列。因为提示符的存在，是从提示符往右数40列
	$ tput cup 0 40
	显示下划线
	$ tput smul
	取消显示下划线
	$ tput rmul

	打字不显示，比如输密码时
	$ stty -echo
	恢复显示
	$ stty echo
8 日期
8.1 date
	显示日期
	$ date	
	显示距1970-01-01 00:00:00 秒数
	$ date +%s
	显示YY-MM-DD
	$ date +%y-%m-%d
	显示YYYY-MM-DD
	$ date +%Y-%m-%d
	或者这样，和上面效果一样
	$ date +%F
	显示这一秒内过子多少纳秒	
	$ date +%N
	显示 HH:MM:SS
	$ date +%T
	
	全部可用格式看man手册去。

	不显示目前日期，显示指定日期，并调整输出格式。比如你想知道2018年05月09日是
	星期几
	$ date --date "2018-05-09" +%A

	设置日期，
	$ date --set '2018-02-24 11:22:22' 
	可以只设置时间
	$ date --set '11:22:22'
	
8.2 延时
	延时10秒
	$ sleep 10
	延时100微秒
	$ usleep 100
10 read命令
	只读N个字符
	$ read -n 3 a
	
	不显示
	$ read -s a
	
	先显示一个字串
	$ read -p "你输呀:" a

	在2秒内输入
	$ read -t 2 a
13 记录回放命令
	$ script -t 2>timing.log

	然后输入各种命令

	然后退出
	$ exit
	这时是退出叫script那个命令。然后目录下面会多一个文件叫typescript，记录了你
	刚才输的命令。
	-t 把延时信息输出到stderr，
	2>timing.log 把stderr输出到文件timing.log
	
	回放。回放时要用timging.log 和typescript两个文件
	$ scriptreplay timing.log typescript
14 find
14.1 按文件名找
	在目前目录下找叫a.txt的文件
	$ find . -name 'a.txt'
	找以txt结缀的文件
	$ find . -name '*.txt'
	找以txt或TXT结缀的文件，-iname 意思是不区分大小写
	$ find . -iname '*.txt'

	-name只能匹配名字，-path能区配路径加名字
	找一个文件叫ddd.pdf,所在目录叫b
	$ find . -path "b/ddd.pdf"

	-regex 用正则匹配路径加名字
	找以txt结尾的文件
	$ find . -regex '.*\.txt$'
14.2 组合条件
	找以txt 或pdf结尾的文件
	$ find . \( -name '*.txt' -o -name '*.pdf' \)
	有两个条件，-name '*.txt',-name '*.pdf',它们中间是-o,是或的意思，两边是
	\( \)，括号前面有斜杠，\(右边有空格，\)左边有空格。

	-a 是“且”的意思。
	以txt结尾，且以abc开头，实际中当然不需要这么麻烦，这里是演示用法
	$ find . \( -name '*.txt' -a -name 'abc*.txt' \)	
14.3 非
	找不以txt结尾的文件
	$ find . ! -regex '.*\.txt$'
14.4 限制深入目录的深度
	只在本目录找，不深入子目录
	$ find . -maxdepth 1 -regex '.*\.pdf$'

	只在本目录，子目录找，不深入子目录的子目录
	$ find . -maxdepth 2 -regex '.*\.pdf$'

	还有-mindepth,最小目录深度
	只在子目录及以下找，不包括本目录
	$ find . -mindepth 2 -regex '.*\.pdf$'

	不进入某个目录。
	find . -name ".git" -prune
	-prune 意思是是如果遇到了叫".git"的目录，不进去
14.5 按文件类型找
	只列出目录
	$ find . -type d

	只列出文件，不包括目录
	$ find . -type f

	只列出链接
	$ find . -type l
14.6 按时间找
	-atime 访问时间，单位是天
	-mtime 内容被改的时间，单位是天
	-ctime 元数据，比如认可，所有者被改的时间，单位是天

	-amin 访问时间，单位是分
	-mmin 内容被改的时间，单位是天
	-cmin 元数据，比如认可，所有者被改的时间，单位是天
	
	找7天内被访问的文件
	$ find . -type f -atime -7
	找7天前那一天被访问的文件
	$ find . -type f -atime 7
	找7天前被访问的文件
	$ find . -type f -atime +7
14.7 按大小找
	找2K以上的文件
	$ find . -type f -size +2k
	找2K以上，4K以下的文件
	$ find . -type f \( -size +2k -a -size -4k \)
	找大小是2k的文件
	$ find . -type f -size 2k

	指定大小的单位：
	c byte
	w word,two byte
	k kilobyte
	m megabyte
	g gigabyte


14.8 按认可找
	找认可是644的文件
	$ find . -type f -perm 644

	permission,前人都翻译成权限，我查字典发现汉语里本没有权限这个词，只是某个前
	人率先翻译，发明的权限这个词，别人就都这么用，我偏不这么照。
14.9 操作找到的文件 
	删除找到的文件
	$ find . -type f -regex '.*\.txt$' -delete	

	删除找到的文件
	$ find . -type f -regex '.*\.txt$' -exec rm {} \;
	用这种方法,-exec后面可以跟其它命令
	{} 表示找到的文件
	\; 是固定写法

	删除找到的文件
	$ find . -type -f -regex '.*\.txt$' | xargs -I aaa rm aaa
	把找出的文件的列表传给xargs命令，
	-I aaa 意思是在xargs命令后面用"aaa"表示文件列表
	rm aaa 删除文件
15 校验和
	$ md5sum file1 file2
	$ sha1sum file1 file2
	$ sha256sum file1 file2
19 expect
	需要安装expect。用于自动交互命令。

	用expect自动执行ssh命令的剧本
	
	1 #!/usr/bin/expect
	2 set timeout 1
	  执行命令
	3 spawn ssh root@192.168.100.174
	  遇到"Password: " 提示符，发送"940423\n"
	4 expect "Password: " {send "940423\n"}
	  expect命令退出
	5 interact

	我对expect的语法只知道这么多，第4行的expect和send两个命令只能写在一行。

20 dd
	产生一个文件
	$ dd if=/dev/zero of=FileName bs=1M count=1
	if 输入文件
	of 输出文件
	bs 块块大小
	count 块块数量

	制作安装系统盘
	$ dd if=/linux/系统/镜象/路径 of=/dev/sdb
	/dev/sdb是你的犹盘，后面没有数字。

21 rsync
	要安装rsync。
	假设有两个目录，一个叫悟空，一个八戒，要让八戒和悟空同步。
	rsync命令可以检查两个目录的差异，只复制需要复制的。它默认通过比较两个文件的
	MD5校验和来确定两个文件是否相同。

	$ rsync -r --delete 悟空/ 八戒
	-r 递归
	--delete 如果一个文件八戒有悟空没有，删除它
	悟空右边的/是必须的，加它表示使悟空这个目录下的文件和八戒下的文件一致，不加
	表示使悟空这个目录和八戒下的文件一致。

	有时如果文件很大，计算md5很费时间，可以不计算md5，只把两个文件是否大小一样
	作为相同的标准
	$ rsync -r --delete --size-only 悟空/ 八戒
	
	不同步pdf文件和txt文件
	$ rsync -r --exclude="*.pdf" --exclude="*.txt" 悟空/ 八戒	
22 怎样把man手册另存为文件
	$ man ssh | col -b > kk
	然后叫kk这个文件的内容就是ssh的man手册内容,是文本格式，可以用vim打开。
	
	col这个命令的man手册解释我看不懂，原文是

	filters out reverse (and half reverse) line feeds so the output is in
     the correct order with only forward and half forward line feeds, and
     replaces white-space characters with tabs where possible

	我不知道'line feeds'是什么意思，百度翻译说是换行符，删除反向和半反向换行符
	，输出只有正向和半正向换行符。我不知道什么是反向换行符，什么是半反向，什么
	是半正向。
	
