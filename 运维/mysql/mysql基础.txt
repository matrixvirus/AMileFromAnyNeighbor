1
	2018年02月25日。
	参考书是MySQL,作者Paul Dubois，和Mysql Crash Course,作者Ben Forta。
	我在CentOS-6.9系统上操作，版本5.1.73
2 安装
	$ yum install mysql mysql-server
	$ service mysqld start
	检查mysql版本
	$ mysql --version
	执行mysql命令，没有参数，连接本机
	$ mysql
	提示符变成
	mysql > 
	
	执行mysql命令可以指定主机，用户。现在还没有密码
	$ mysql -h 192.168.100.173 -u root

	检查mysql版本
	mysql> SELECT VERSION();
3 
3.1 作库作表
	检查有哪些库
	mysql> SHOW DATABASES;
	创建一个库
	mysql> CREATE DATABASE [IF NOT EXISTS] contact 
		[DEFAULT CHARACTER SET = UTF8];
	删除这个库，只是演示删除的用法，后面还要用这个库
	mysql> DROP DATABASE contact;
	进入这个库
	mysql> USE contact;
	检查目前在哪个数据库
	mysql> SELECT DATABASE();
	检查有哪些表
	mysql> SHOW TABLES;
	制作一个表
	mysql> CREATE TABLE [IF NOT EXISTS] contact 
		(ID INT PRIMARY KEY AUTO_INCREMENT) 
		[ENGINE=innodb];

	删除这个表，不删除只演示
	mysql> DROP TABLE contact;

	检查这个表有哪些列
	mysql> DESCRIBE contact;

	检查这个表的详细信息
	mysql> SHOW CREATE TABLE contact\G
	\G的意思是把输出的每一列换成一行，以免一行太长不易读。
3.2 改表
3.2.1 加列删列
	给表contact加一列
	mysql> ALTER TABLE contact ADD COLUMN name varchar(32) [NOT NULL] AFTER ID;
	演示，删除刚加的那一列
	mysql> ALTER TABLE contact DROP COLUMN name;
	演示，如果要把这一列加到ID那一列前面
 	mysql> ALTER TABLE contact ADD COLUMN name varchar(32) [NOT NULL] FIRST;	

	加一列有空格的列名。要用反引号括起来
	mysql> ALTER TABLE contact ADD COLUMN `Important Grade` INT [DEFAULT 0]
		AFTER `Phone1`;

3.2.2 改列定义
	演示，把ID那一列改名为Id，并取消它的自动增属性la
	mysql> ALTER TABLE contact CHAGE COLUMN ID Id INT;

	把name那一列改名为Name,并修改值类型，并添加默认值
	mysql> ALTER TABLE contact CHANGE COLUMN name Name varchar(64) [NOT NULL]
		[DEFAULT 'HADES'];

	演示，只改变定义不改列名
	mysql> ALTER TABLE contact CHANGE MODIFY varchar(64) [NOT NULL]
		[DEFAULT 'HADES'];
3.2.3 改主键
	删除主键。这个例子中要先取消Id那一列的自动增属性
	mysql> ALTER TABLE contact DROP PRIMARY KEY;
	重新添加ID那一列为主键
	mysql> ALTER TABLE contact ADD PRIMARY KEY (Id);


	添加Id和name两列组合的主键。
	mysql> ALTER TABLE contact ADD PRIMARY KEY (Id, name);
3.2.4 改表名
	演示，把表contact改成叫aiyama
	mysql> RENAME TABLE contact TO aiyama;
	或
	mysql> ALTER TABLE contact RENAME TO aiyama;
3.2.5 改字符集
	演示把表contact的字符集改成latin1
	mysql> ALTER TABLE CONVERT TO CHARACTER SET latin1;
4 使用剧本
	写一个文件叫AtomBomb.sql，内容是
	-- 这是注释
	ALTER TABLE contact.contact ADD COLUMN Phone1 CHAR(32) [NOT NULL];

	在mysql内执行这个文件的方法
	mysql> source AtomBomb.sql;	

	在系统命令行上执行这个文件的方法
	$ mysql < AtomBomb.sql
5 插数据
5.1
	给表contact插入一行数据，只指定Name,Phone1两列
	mysql> INSERT INTO contact (Name, Phone1) VALUES('仇庆子', '0085256484926');

	一次插入多行
	mysql> INSERT INTO contact (Name, Phone1) VALUES('东莞号朱光初', 
		'13728223505'), ('丹霞', '15625098214'),('尹文婷', '18672233093');
5.2 从一个表查询数据插入另一个表
	建另一个表叫contact2,和contact结构一样，但是没有内容，把表contact的内容复制
	给表contact2
	mysql> INSERT INTO contact2 (SELECT * FROM contact);

	
6 改数据
	mysql> UPDATE contact SET `Important Grade`=5,Name='仇庆子' WHERE Name=
		'仇庆子'; 

	删除数据
	mysql> DELETE FROM contact WHERE Name='丹霞';

7 查
7.1
	查Name,Phone1两列，只查仇庆子的
	mysql> SELECT Name,Phone1 FROM contact WHERE Name = '仇庆子';
	查除仇庆子以外的
	mysql> SELECT Name,Phone1 FROM contact WHERE Name != '仇庆子';

	还有这些符号可以用
	=		等于
	<>		不等于
	!=		不等于
	<		小于
	>		大于
	<=		小于或等于
	>=		大于或等于
	BETWEEN 比如BETWEEN 5 AND 10 
	IS NULL 是NULL
	NOT		加在任何一个式子前面表示非
	IN 		在一列可选值内，比如 IN (1,2,3)

	使用正则式，只查姓仇的
	mysql> SELECT Name, Phone1 FROM contact WHERE Name REGEXP  '^仇.*';
	只查不姓仇的
	mysql> SELECT Name, Phone1 FROM contact WHERE NOT Name REGEXP  '^仇.*';

	使用多个条件
	mysql> SELECT Name, Phone1 FROM contact WHERE Name REGEXP  '^仇.*'
		AND 1 = 1;
	mysql> SELECT Name, Phone1 FROM contact WHERE Name REGEXP  '^仇.*'
		 OR 1 = 1;
	
7.2 排序	
	排序，使用两列Name,Import Grade。默认是升序，大的在上
	mysql> SELECT * FROM contact ORDER BY Name,`Important Grade`;

	当Name列相同，Important Grade列用降序。要对一列用降序，就把DESC加在那一列
	后面
	mysql> SELECT * FROM contact ORDER BY Name,`Important Grade` DESC;
7.3 拼接字段
	mysql> SELECT CONCAT(Name, '(', Phone1, ')') FROM contact;
	给拼接的字段起一个名字
	mysql> SELECT CONCAT(Name, '(', Phone1, ')') AS `Ghost In` FROM contact;
7.4 别名
	mysql> SELECT Name AS '名字',Phone1 AS '手机号' FROM contact;
7.5 分组
	查每个学生的总分
	SELECT student_name, AVG(test_score)
    ->        FROM student
    ->        GROUP BY student_name;
7.7 限制结果数量
	只显示查询结果的前面5行
	mysql> SELECT * FROM contact LIMIT 5;
	只显示第5行开始数5行
	mysql> SELECT * FROM contact LIMIT 5,5;
7.8 子查询
	下面这个例子很傻，主要是要演示用法
	先执行SELECT * FROM contact, 括号括起来，
	起个别名叫ab,
	再查询ab
	mysql> SELECT * FROM (SELECT *  FROM contact) as ab;
7.9 查多个表
	你要有两个表。我又建了一个表叫BodyInfo，字段是名字，身高，体重，年纪。
	
	查仇庆子的手机号和身高
	mysql> SELECT contact.Name,contact.Phone1,BodyInfo.Height FROM 
		contact,BodyInfo WHERE contact.Name='仇庆子' 
		AND contact.Name = BodyInfo.Name;


7.10 多个查询语句结果列在一起
	把两个SELECT语句用UNION 隔开
	mysql> SELECT * FROM contact UNION SELECT * FROM contact;
	
7.11 联结
7.11.1 左联结
	mysql> SELECT * FROM contact LEFT JOIN BodyInfo ON contact.Name = BodyInfo.Name\G
	contact LEFT JOIN BodyInfo
		表contact写在左边，叫左表，BodyInfo叫右表
	ON contact.Name = BodyInfo.Name
		左表的Name列等于右表的
	规则是，以左表为准，左表的每一行数据和右表的每一相符的行配对，如果右表没有相
	符的，则视作左表的这一行数据和右表一个数据全为空的行配对。
7.11.2 右联结
	mysql> SELECT * FROM contact RIGHT JOIN BodyInfo ON contact.Name = BodyInfo.Name\G
	规则是，以右表为准，右表的每一行数据和左表的每一相符的行配对，如果左表没有相
	符的，则视作右表的这一行数据和左表一个数据全为空的行配对。
7.11.3 内联结
	mysql> SELECT * FROM contact INNER JOIN BodyInfo ON contact.Name = BodyInfo.Name\G
	只列出相符的配对。我不知道专门弄个内联结的概念做什么，因为上面一句和下面一句好象没
	有区别
	mysql> SELECT * FROM contact,BodyInfo WHERE contact.Name = BodyInfo.Name\G
8 函数
	统计一列的和
	mysql> SELECT SUM(`Important Grade`) FROM contact;		

	统计数量
	mysql> SELECT COUNT(`Important Grade`) FROM contact;

	查现在日期
	mysql> SELECT CurDate();
8.1 统计函数
	Avg		平均值
	Count	次数
	Max		最大值
	Min		最小值
	Sum		求和
8.2 字串处理函数
	Upper	字串变成全大写
	Lower	字串变成全小写
	Length	字串长度
	Ltrim	删除字串左边空格
	Rtrim	删除字串右边空格
8.3 日期函数
	AddDate			
		例子
		mysql> SELECT ADDDATE('2008-01-02', 31);
        -> '2008-02-02'
		
	AddTime
		例子
		SELECT ADDTIME('01:00:00.999999', '02:00:00.999998');
        -> '03:00:01.999997'
	CurDate
		现在日期
	CurTime
		现在时间
	Date
		日期时间的日期部分
	DateDiff
		例子
		SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30');
        -> 1
		SELECT DATEDIFF('2010-11-30 23:59:59','2010-12-31');
        -> -31

	DateAdd
		好象跟AddDate差不多
	DateFormat
		例子
		SELECT DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s');
        -> '22:23:00'
	Day
		一个日期的天数部分
	DayOfWeek
		一个日期是星期几
	Hour
		一个时间的小时部分
	Minute
		一个时间的分部分
	Month
		一个日期的月部分
	Now
		现在日期和时间
	Second
		一个时间的秒部分
	Time
		一个日期时间的时间部分
	Year
		一个日期的年部分	
8.4 数学函数
	Abs
	Cos
	Exp
	Mod
	Pi
	Rand
	Sin
	Sqrt
	Tan
9 视图
	以一次查询结果建一个视图
	mysql> CREATE VIEW TimeMachine AS SELECT * FROM contact;

	再执行
	mysql> SHOW TABLES;
	发现视图被当作表列了出来。

	删除视图
	mysql> drop view TimeMachine;

10 存储过程
10.1
	制作一个存储过程

	mysql> DELIMITER //
	mysql> CREATE PROCEDURE ohayo()
    -> BEGIN
    -> SELECT * FROM contact;
    -> SELECT * FROM contact;
    -> END
    -> //
	mysql> DELIMITER ;

	DELIMITER // 意思是把mysql的语句分隔符改成//，因为存储过程里的语句有分号，
		但是我们不希望mysql认为语句结束
	DELIMITER ; 把语句分隔符改回分号

	调用
	mysql> CALL ohayo();

	删除
	mysql> DROP PROCEDURE ohayo;
10.2 使用参数
	DELIMITER //
	CREATE PROCEDURE shishi(IN name VARCHAR(32),OUT num INT)
	BEGIN
		SELECT COUNT(*) INTO num FROM contact WHERE Name=name;
	END //
	DELIMITER ;

	调用
	mysql> CALL shishi('仇庆子', @num);
	检查num的值
	mysql> SELECT @num

	我这有点问题，我只有仇庆子的一条记录，总共有4个人的记录，然后它总是返回4。
10.3
	下面是一个复杂点的例子
	CREATE PROCEDURE shishi(
		IN 

	...
	
	我的DECLARE 语句老报错，我不知道错在哪里。这一节先放一放。
11 变量
	定义一个变量
	mysql> SET @a=2
	查这个变量
	mysql> SELECT @a
12 用户和许可
	建一个用户，叫zyc,密码是940423
	mysql> CREATE USER 'zyc' IDENTIFIED BY '940423';

	删除用户
	mysql> DROP USER 'zyc';

	检查用户的许可
	mysql> SHOW GRANTS FOR 'zyc';

	允许用户zyc查询库contact的所有表
	mysql> GRANT SELECT ON contact.* TO 'zyc';
	取消允许用户zyc查询,插入库contact的所有表
	mysql> REVOKE SELECT,INSERT ON contact.* FROM zyc;


	可用的许可：ALL和其它命令如SELECT,INSERT

	把用户zyc的密码改成940423
	mysql> SET PASSWORD FOR zyc = password('940423');
13 导入导出数据
	把表contact的数据导出到文件
	mysql> SELECT * FROM contact INTO OUTFILE 'a.txt';
	文件a.txt在/var/lib/mysql/contact，和这个表一个目录里。
	文件a用跳格分隔数据。

	另一个表contact2,和表contact结构一样，没有内容。
	表contact2从文件a.txt导入数据
	mysql> LOAD DATA INFILE 'a.txt' INTO TABLE contact2

	如果保存数据的那个文件的数据是用逗号分隔的，则导入时要指定分隔符是逗号
	mysql> LOAD DATA INFILE 'a.txt' INTO TABLE contact2 TERMINATED BY ',';



14 锁表
	锁定一个表读只
	mysql> LOCK TABLE contact READ;
	解锁
	mysql> UNLOCK TABLES;

	锁定所有数据库
	mysql> SET GLOBAL read_only = ON;
	解锁
	mysql> SET GLOBAL read_only = OFF;

15 外键
	建表BodyInfo后设置Name列和表contact的Name列是外键关系，
	mysql> ALTER TABLE BodyInfo ADD FOREIGN KEY (`Name`) REFERENCES 
		contact(Name) [ON UPDATE CASCADE];
	ON UPDATE RESTRICT 意思是表contact的Name列有变化，BodyInfo表的Name列不跟随。
	
	可用的选择
	ON DELETE RESTRICT 儿表不跟随妈表变化
	ON DELETE NO ACTION 和 ON UPDATE RESTRICT 同义
	ON DELETE CASCADE 妈表删除，儿表也删除
	ON DELETE SET NULL 妈表删除后，儿表置空
	UPDATE的和DELETE的一样。

	建表时设置外键
	mysql> CREATE TABLE t1(Name VARCHAR(64), FOREIGN KEY (Name) REFERENCES 
		contact(Name));
15 索引
	给表contact的列Name添加索引，索引名叫himalayan
	mysql> ALTER TABLE contact ADD [UNIQUE] INDEX himalayan(Name);
	或者
	mysql> CREATE [UNIQUE] INDEX himalayan ON contact (Name);

	UNIQUE 指被索引列不能有重复数据

	建表的时候建索引
	mysql> CREATE TABLE(
		id int,[UNIQUE] INDEX himalayan(id));

	删除索引
	mysql> DROP INDEX himalayan ON contact;
		

4
	在系统命令行上检查有哪些库，上面是在mysql内
	$ mysqlshow

	在系统命令行上检查一个库有哪些表，上面是在mysql内
	$ mysqlshow contact

	检查有哪些马达可用
	mysql> SHOW ENGINES;

	检查有哪些支持交易的马达
	mysql> SELECT ENGINE FROM INFORMATION_SCHEMA.ENGINES 
		WHERE TRANSACTIONS='YES';
